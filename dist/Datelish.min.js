/*github.com/Grafluxe/datelish*/
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Datelish=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"monthAsNames",value:function(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]:["January","February","March","April","May","June","July","August","September","October","November","December"]}},{key:"daysPerMonth",value:function(t,n){var r=[],o=void 0,a=e.daysTotal(t,n);for(o=1;o<=a;o++)r.push(o);return r}},{key:"daysTotal",value:function(t,n){return"string"==typeof t&&(t=e.monthNameToIndex(t)),t<0?null:new Date(n,t+1,0).getDate()}},{key:"years",value:function(e,t){var n=[],r=void 0,o=void 0;if(e<1e3||e>9999||"number"==typeof t&&(t<1e3||t>9999))throw new Error("The years method expects a four digit year.");for("string"==typeof t&&(t=e+parseInt(t,10)),(o=t-e)<0&&(o=0),r=0;r<=o;r++)n.push(e+r);return n}},{key:"currYear",value:function(){return(new Date).getFullYear()}},{key:"monthNameToIndex",value:function(t){return t=t.substr(0,1).toUpperCase()+t.substr(1),e.monthAsNames(t.length<=3).indexOf(t)}},{key:"monthIndexToName",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return e.monthAsNames(n)[t]}},{key:"todayIs",value:function(e){var t=new Date;return e.getFullYear()===t.getFullYear()&&e.getMonth()===t.getMonth()&&e.getDate()===t.getDate()}},{key:"dateIsBetween",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return e>=t&&(r?e<=n:e<n)}},{key:"dateIsAfter",value:function(e,t){return e>t}},{key:"dateIsBefore",value:function(e,t){return e<t}},{key:"toISO8601",value:function(e){var t=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate(),n="T"+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds(),r=e.toString().substr(-11,3)+":"+e.toString().substr(-8,2);return(t+n).replace(/(\D)(\d)(?=\D)|(\D)(\d)$/g,"$1$30$2$4")+r}},{key:"toLittleEndian",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/";return!(arguments.length>2&&void 0!==arguments[2])||arguments[2]?e.prepend0(t.getDate())+n+e.prepend0(t.getMonth()+1)+n+t.getFullYear():t.getDate()+n+(t.getMonth()+1)+n+t.getFullYear()}},{key:"fromLittleEndian",value:function(e){var t=e.match(/\d+/g);if(4!==t[2].length)throw new Error("The fromLittleEndian method expects a four digit year (DD/MM/YYYY).");return new Date(t[2],t[1]-1,t[0])}},{key:"toMiddleEndian",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/";return!(arguments.length>2&&void 0!==arguments[2])||arguments[2]?e.prepend0(t.getMonth()+1)+n+e.prepend0(t.getDate())+n+t.getFullYear():t.getMonth()+1+n+t.getDate()+n+t.getFullYear()}},{key:"fromMiddleEndian",value:function(e){var t=e.match(/\d+/g);if(4!==t[2].length)throw new Error("The fromMiddleEndian method expects a four digit year (MM/DD/YYYY).");return new Date(t[2],t[0]-1,t[1])}},{key:"toBigEndian",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/";return!(arguments.length>2&&void 0!==arguments[2])||arguments[2]?t.getFullYear()+n+e.prepend0(t.getMonth()+1)+n+e.prepend0(t.getDate()):t.getFullYear()+n+(t.getMonth()+1)+n+t.getDate()}},{key:"fromBigEndian",value:function(e){var t=e.match(/\d+/g);if(4!==t[0].length)throw new Error("The fromBigEndian method expects a four digit year (YYYY/MM/DD).");return new Date(t[0],t[1]-1,t[2])}},{key:"toMinutes",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=String(e/60),r=String(e%60);return n.indexOf(".")>-1&&(n=n.substr(0,n.indexOf("."))),(t&&n.length<2?"0"+n:n)+":"+(r.length<2?"0"+r:r)}},{key:"now",value:function(){return new Date}},{key:"today",value:function(){var e=new Date;return new Date(e.getFullYear(),e.getMonth(),e.getDate())}},{key:"tomorrow",value:function(){return e.daysFromDate(e.today(),1)}},{key:"yesterday",value:function(){return e.daysFromDate(e.today(),-1)}},{key:"daysFromDate",value:function(e,t){return new Date(e.getFullYear(),e.getMonth(),e.getDate()+t)}},{key:"prevMonth",value:function(){var t=e.today();return new Date(t.getFullYear(),t.getMonth()-1,1)}},{key:"nextMonth",value:function(){var t=e.today();return new Date(t.getFullYear(),t.getMonth(),e.daysTotal(t.getMonth(),t.getFullYear())+1)}},{key:"prepend0",value:function(e){if(String(e).indexOf(".")>-1||isNaN(e))throw new Error("The prepend0 method expects a whole number.");return(e=Number(e))<10?"0"+e:e}},{key:"dayCount",value:function(e,t){return(t.getTime()-e.getTime())/1e3/60/60/24+(e.getTimezoneOffset()>t.getTimezoneOffset()?1:0)}},{key:"monthsFrom",value:function(e,t){var n=[],r=void 0,o=12*(t.getFullYear()-e.getFullYear())+(t.getMonth()-e.getMonth())+1;for(r=1;r<o;r++)n.push(new Date(e.getFullYear(),e.getMonth()+r,1));return n}}]),e}();"object"===("undefined"==typeof module?"undefined":_typeof(module))&&module.exports&&(module.exports=Datelish);